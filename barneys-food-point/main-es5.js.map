{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart.service.ts","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/food-item.model.ts","webpack:///src/app/food-item/food-item.component.ts","webpack:///src/app/food-item/food-item.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu-items.service.ts","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","redirectTo","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CartService","order","orderUpdated","orderTotal","total","newOrder","flag","elmnt","name","size","price","quantity","push","next","item","filter","onTotalPrice","providedIn","CartComponent","cart","orders","totalPrice","onGetOrder","subscribale","subscribe","totalSubscribe","onRemoveItem","alert","unsubscribe","onCheckout","FoodItem","FoodItemComponent","str","srcElement","value","foodItem","calculatePrice","onAddOrder","onSizeSelect","onAdd","onReduce","HomeComponent","router","loginService","sessionStorage","getItem","navigate","length","logout","onResetOrder","onLogout","LoginService","http","base","form","post","setItem","LoginComponent","error","email","password","formData","FormData","append","login","res","onLogin","MenuItemsService","get","MenuComponent","menuService","loading","foodItems","getMenu","SignupComponent","signup","onSignup","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartComponent } from './cart/cart.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\n  {\n    path: 'home',\n    component: HomeComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'menu' },\n      { path: 'menu', component: MenuComponent },\n      { path: 'cart', component: CartComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'barneys-food-point';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { FoodItem } from './food-item.model';\nimport { MenuComponent } from './menu/menu.component';\nimport { CartComponent } from './cart/cart.component';\nimport { FoodItemComponent } from './food-item/food-item.component';\n\n@NgModule({\n  declarations: [AppComponent, LoginComponent, HomeComponent, SignupComponent, MenuComponent, CartComponent, FoodItemComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\n  providers: [FoodItem],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  order: { name: string; size: string; quantity: number; price: number }[] = [];\n  orderUpdated = new Subject<\n    { name: string; size: string; quantity: number; price: number }[]\n  >();\n  orderTotal = new Subject<number>();\n  total: number = 0;\n  constructor() {}\n  onAddOrder(newOrder: {\n    name: string;\n    size: string;\n    quantity: number;\n    price: number;\n  }) {\n    let flag = false;\n    for (const elmnt of this.order) {\n      if (elmnt.name === newOrder.name && elmnt.size === newOrder.size) {\n        elmnt.price = newOrder.price;\n        elmnt.quantity = newOrder.quantity;\n        flag = true;\n        break;\n      }\n    }\n    if (!flag) {\n      this.order.push(newOrder);\n    }\n    this.orderUpdated.next(this.order);\n  }\n\n  onGetOrder() {\n    return this.order;\n  }\n\n  onRemoveItem(item: {\n    name: string;\n    size: string;\n    quantity: number;\n    price: number;\n  }) {\n    this.order = this.order.filter((elmnt) => elmnt !== item);\n    this.orderUpdated.next(this.order);\n    this.total = this.onTotalPrice();\n  }\n\n  onResetOrder() {\n    this.order = [];\n    this.orderUpdated.next(this.order);\n    this.total = this.onTotalPrice();\n  }\n\n  onTotalPrice(): number {\n    this.total = 0;\n    for (const elmnt of this.order) {\n      this.total += elmnt.price;\n    }\n    this.orderTotal.next(this.total);\n    return this.total;\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CartService } from './../cart.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit, OnDestroy {\n  totalPrice: number;\n  orders: {\n    name: string;\n    size: string;\n    quantity: number;\n    price: number;\n  }[] = [];\n  private subscribale: Subscription;\n  private totalSubscribe: Subscription;\n  constructor(private cart: CartService) {}\n\n  ngOnInit(): void {\n    this.totalPrice = this.cart.onTotalPrice();\n    this.orders = this.cart.onGetOrder();\n    this.subscribale = this.cart.orderUpdated.subscribe((order) => {\n      this.orders = order;\n    });\n    this.totalSubscribe = this.cart.orderTotal.subscribe((total) => {\n      this.totalPrice = total;\n    });\n  }\n\n  removeItem(item) {\n    this.cart.onRemoveItem(item);\n  }\n\n  onCheckout() {\n    alert(\n      `The Program ends here, hope you enjoyed your meal!\\nYour total expenditure was ₹ ${this.totalPrice}/-`\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscribale.unsubscribe();\n    this.totalSubscribe.unsubscribe();\n  }\n}\n","<h2>Order Summary</h2>\n<div class=\"row\">\n  <div class=\"col-50\">\n    <ul>\n      <h2 *ngIf=\"orders.length === 0\">\n        You Have no items in your cart.. Why don't you look at our menu and come\n        back later!\n      </h2>\n      <li *ngFor=\"let item of orders\">\n        {{ item.name | titlecase }} - {{ item.size }} X {{ item.quantity }}\n        <button class=\"delete-btn\" (click)=\"removeItem(item)\">X</button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-50\">\n    <h2>Total: ₹{{ totalPrice }}/-</h2>\n    <button (click)=\"onCheckout()\">Proceed to Pay</button>\n  </div>\n</div>\n","export class FoodItem {\r\n  name: string;\r\n  img: string;\r\n  small: number;\r\n  medium: number;\r\n  large: number;\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { FoodItem } from './../food-item.model';\nimport { CartService } from './../cart.service';\n\n@Component({\n  selector: 'app-food-item',\n  templateUrl: './food-item.component.html',\n  styleUrls: ['./food-item.component.scss'],\n})\nexport class FoodItemComponent implements OnInit {\n  @Input('foodItem') foodItem: FoodItem;\n  size: string;\n  quantity: number;\n  price: number = null;\n  constructor(private cart: CartService) {}\n\n  ngOnInit(): void {\n    this.quantity = 0;\n  }\n\n  onSizeSelect(str) {\n    this.size = str.srcElement.value;\n    this.price = +this.foodItem[this.size];\n  }\n  onAdd() {\n    this.quantity++;\n    this.calculatePrice();\n  }\n  onReduce() {\n    this.quantity--;\n    this.quantity = this.quantity < 0 ? 0 : this.quantity;\n    this.calculatePrice();\n  }\n  calculatePrice() {\n    this.price = this.foodItem[this.size] * this.quantity;\n  }\n  onAddOrder() {\n    this.cart.onAddOrder({\n      name: this.foodItem.name,\n      size: this.size,\n      quantity: this.quantity,\n      price: this.price,\n    });\n  }\n}\n","<div class=\"card\">\n  <img [src]=\"foodItem.img\" [alt]=\"foodItem.name\" />\n  <h2>{{ foodItem.name | titlecase }}</h2>\n  <form (submit)=\"onAddOrder()\">\n    <strong>Select Size</strong>\n    <select required name=\"size\" (change)=\"onSizeSelect($event)\">\n      <option value=\"\" disabled selected>Select Size</option>\n      <option value=\"small\">Small</option>\n      <option value=\"medium\">Medium</option>\n      <option value=\"large\">Large</option>\n    </select>\n    <strong>Quantity</strong>\n    <p>\n      <span (click)=\"onAdd()\">+</span><span id=\"qty\">{{ quantity }}</span\n      ><span (click)=\"onReduce()\">-</span>\n    </p>\n    <button type=\"submit\" *ngIf=\"quantity > 0 && size\">\n      Add\n      <span>₹{{ foodItem[size] * quantity }}</span>\n    </button>\n  </form>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoginService } from './../login.service';\nimport { CartService } from './../cart.service';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  name: string;\n  orders: number = 0;\n  private subscribale: Subscription;\n  constructor(\n    private router: Router,\n    private loginService: LoginService,\n    private cart: CartService\n  ) {}\n  ngOnInit(): void {\n    if (sessionStorage.getItem('loggedIn') !== 'true') {\n      this.router.navigate(['/login']);\n    } else {\n      this.name = sessionStorage.getItem('name');\n    }\n    this.subscribale = this.cart.orderUpdated.subscribe((order) => {\n      this.orders = order.length;\n    });\n  }\n  onLogout() {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n    this.cart.onResetOrder();\n  }\n  ngOnDestroy() {\n    this.subscribale.unsubscribe();\n  }\n}\n","<header>\n  <nav>\n    <h2>Barney's Food Point</h2>\n    <div>\n      <a href=\"#\" routerLink=\"menu\">Menu</a>\n      <a href=\"#\" routerLink=\"cart\"\n        >Cart\n        <span *ngIf=\"orders > 0\">{{ orders < 10 ? orders : \"9+\" }}</span></a\n      >\n    </div>\n  </nav>\n  <div class=\"user-nav\">\n    <p>\n      Hey! <b>{{ name | uppercase }}</b>\n    </p>\n    <button class=\"logout\" (click)=\"onLogout()\">logout</button>\n  </div>\n</header>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  base: string = 'http://localhost/food%20point/api.php';\n  constructor(private http: HttpClient) {}\n\n  login(form: FormData) {\n    return this.http.post(this.base, form);\n  }\n  logout() {\n    sessionStorage.setItem('name', null);\n    sessionStorage.setItem('email', null);\n    sessionStorage.setItem('loggedIn', 'false');\n  }\n  signup(form: FormData) {\n    return this.http.post(this.base, form);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { LoginService } from './../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  error: boolean;\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.error = false;\n  }\n\n  onLogin(form: NgForm) {\n    this.email = form.value.email;\n    this.password = form.value.password;\n    let formData = new FormData();\n    formData.append('email', this.email);\n    formData.append('password', this.password);\n    formData.append('login', 'true');\n    this.loginService.login(formData).subscribe((res) => {\n      this.error = res['error'] === 'success' ? false : true;\n      if (!this.error) {\n        sessionStorage.setItem('name', res['name']);\n        sessionStorage.setItem('email', res['email']);\n        sessionStorage.setItem('loggedIn', 'true');\n        this.router.navigate(['home']);\n      } else {\n        this.loginService.logout();\n      }\n    });\n  }\n}\n","<form class=\"form-control\" (ngSubmit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\n  <h2>Login</h2>\n  <p class=\"error\" *ngIf=\"error\">Invalid Credentials</p>\n  <div class=\"mat-input\">\n    <input\n      type=\"email\"\n      name=\"email\"\n      id=\"email\"\n      placeholder=\" \"\n      required\n      ngModel\n      email\n    />\n    <label for=\"email\">Enter Email*</label>\n  </div>\n  <br />\n  <div class=\"mat-input\">\n    <input\n      type=\"password\"\n      name=\"password\"\n      id=\"password\"\n      placeholder=\" \"\n      required\n      ngModel\n    />\n    <label for=\"password\">Enter Password*</label>\n  </div>\n  <button type=\"submit\" class=\"mat-button\" [disabled]=\"!loginForm.valid\">\n    Login\n  </button>\n  <p>Don't have an account? <a href=\"#\" routerLink=\"/signup\">Signup</a> here</p>\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuItemsService {\n  base: string = 'http://localhost/food%20point/api.php';\n\n  constructor(private http: HttpClient) {}\n\n  getMenu() {\n    return this.http.get(`${this.base}?menu=1`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MenuItemsService } from './../menu-items.service';\nimport { FoodItem } from './../food-item.model';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n})\nexport class MenuComponent implements OnInit {\n  loading: boolean = false;\n  foodItems: FoodItem[] = [];\n  constructor(private menuService: MenuItemsService) {}\n\n  ngOnInit(): void {\n    this.loading = true;\n    this.menuService.getMenu().subscribe((res: FoodItem[]) => {\n      this.foodItems = res;\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"checkout\">\n  <a href=\"#\" [routerLink]=\"['/home/cart']\">Checkout</a>\n</div>\n<div class=\"row\">\n  <div id=\"loading-screen\" *ngIf=\"loading\">\n    <div class=\"loader\"></div>\n  </div>\n  <app-food-item\n    *ngFor=\"let item of foodItems\"\n    [foodItem]=\"item\"\n  ></app-food-item>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './../login.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent implements OnInit {\n  constructor(private loginService: LoginService, private router: Router) {}\n  error: boolean = false;\n  name: string;\n  email: string;\n  password: string;\n  ngOnInit(): void {}\n\n  onSignup(form: NgForm) {\n    this.name = form.value.name;\n    this.email = form.value.email;\n    this.password = form.value.password;\n\n    let formData = new FormData();\n    formData.append('name', this.name);\n    formData.append('email', this.email);\n    formData.append('password', this.password);\n    formData.append('signup', 'true');\n\n    this.loginService.signup(formData).subscribe((res) => {\n      this.error = res['error'] !== 'success';\n      if (!this.error) {\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n","<form\n  class=\"form-control\"\n  (ngSubmit)=\"onSignup(signupForm)\"\n  #signupForm=\"ngForm\"\n>\n  <h2>Signup</h2>\n  <p class=\"error\" *ngIf=\"error\">Email Id already exists!</p>\n  <div class=\"mat-input\">\n    <input\n      type=\"email\"\n      name=\"email\"\n      id=\"email\"\n      placeholder=\" \"\n      required\n      ngModel\n      email\n    />\n    <label for=\"email\">Enter Email*</label>\n  </div>\n  <br />\n  <div class=\"mat-input\">\n    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\" \" required ngModel />\n    <label for=\"name\">Enter Name*</label>\n  </div>\n  <br />\n  <div class=\"mat-input\">\n    <input\n      type=\"password\"\n      name=\"password\"\n      id=\"password\"\n      placeholder=\" \"\n      required\n      ngModel\n    />\n    <label for=\"password\">Enter Password*</label>\n  </div>\n  <button type=\"submit\" class=\"mat-button\" [disabled]=\"!signupForm.valid\">\n    Signup\n  </button>\n  <p>Already have an account? <a href=\"#\" routerLink=\"/login\">Login</a> here</p>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}